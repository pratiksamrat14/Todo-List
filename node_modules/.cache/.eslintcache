[{"D:\\Todo  List\\src\\index.js":"1","D:\\Todo  List\\src\\App.js":"2","D:\\Todo  List\\src\\todoList\\todo.js":"3"},{"size":849,"mtime":1634050075459,"results":"4","hashOfConfig":"5"},{"size":165,"mtime":1634050229348,"results":"6","hashOfConfig":"5"},{"size":3394,"mtime":1634049938499,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qxsr2",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"D:\\Todo  List\\src\\index.js",[],"D:\\Todo  List\\src\\App.js",[],"D:\\Todo  List\\src\\todoList\\todo.js",["15"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst getLocalData = () => {\r\n  const list = localStorage.getItem(\"itemData\");\r\n  if (list) {\r\n    return JSON.parse(list);\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst Todo = () => {\r\n  const [initialData, setInitialData] = useState(\"\");\r\n  const [item, setItem] = useState(getLocalData());\r\n  const [toggleItem, setToggleItem] = useState(false);\r\n  const [isId, setIsId] = useState(\"\");\r\n  useEffect(() => {\r\n    localStorage.setItem(\"itemData\", JSON.stringify(item));\r\n  }, [item]);\r\n\r\n  const editItem = (index) => {\r\n    const curr = item.find((currElement) => {\r\n      return currElement.id === index;\r\n    });\r\n    setInitialData(curr.name);\r\n    setToggleItem(true);\r\n    setIsId(index);\r\n  };\r\n\r\n  const addItem = () => {\r\n    if (!initialData) {\r\n      alert(\"Input box is empty\");\r\n    } else if (toggleItem && initialData) {\r\n      setItem(\r\n        item.map((curr) => {\r\n          if (curr.id == isId) {\r\n            curr.name=initialData ;\r\n          }\r\n\r\n          return curr;\r\n        })\r\n      );\r\n      setInitialData(\"\");\r\n      setIsId(null);\r\n      setToggleItem(false);\r\n    } else {\r\n      const newObj = {\r\n        id: new Date().getTime().toString(),\r\n        name: initialData,\r\n      };\r\n      setItem([...item, newObj]);\r\n      setInitialData(\"\");\r\n    }\r\n  };\r\n\r\n  const delItem = (index) => {\r\n    const newData = item.filter((curr) => {\r\n      return curr.id !== index;\r\n    });\r\n    setItem(newData);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"main-div\">\r\n        <div className=\"child-div\">\r\n          <figure>\r\n            <img src=\"./todo.svg\" alt=\"todologo\" />\r\n            <figcaption>Add Your List Here ✌</figcaption>\r\n          </figure>\r\n          <div className=\"addItems\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"✍ Add Item\"\r\n              className=\"form-control\"\r\n               value={initialData}\r\n              onChange={(event) => setInitialData(event.target.value)}\r\n            />\r\n            {toggleItem ? (\r\n              <i className=\"far fa-edit add-btn\" onClick={() => addItem()}></i>\r\n            ) : (\r\n              <i className=\"fa fa-plus add-btn\" onClick={() => addItem()}></i>\r\n            )}\r\n          </div>\r\n          {/* show our items  */}\r\n          <div className=\"showItems\">\r\n            {item.map((curr) => {\r\n              return (\r\n                <div className=\"eachItem\">\r\n                  <h3>{curr.name}</h3>\r\n                  <div className=\"todo-btn\">\r\n                    <i\r\n                      className=\"far fa-edit add-btn\"\r\n                      onClick={() => editItem(curr.id)}\r\n                    ></i>\r\n                    <i\r\n                      className=\"far fa-trash-alt add-btn\"\r\n                      onClick={() => delItem(curr.id)}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* rmeove all button  */}\r\n          <div className=\"showItems\">\r\n            <button\r\n              className=\"btn effect04\"\r\n              data-sm-link-text=\"Remove All\"\r\n              onClick={() => setItem([])}\r\n            >\r\n              <span> CHECK LIST</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n",{"ruleId":"16","severity":1,"message":"17","line":37,"column":23,"nodeType":"18","messageId":"19","endLine":37,"endColumn":25},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]